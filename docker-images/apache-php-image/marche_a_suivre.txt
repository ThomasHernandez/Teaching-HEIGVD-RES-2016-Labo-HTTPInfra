--LABO HTTP--

--partie 1--

docker run -d -p 9090:80 php:5.6-apache -> -d pour lancer le container en arrière plan
-p pour port mapping, donc si écoute sur port 80, on se mappe sur le port 9090
php:5.6-apache est le nom de l'image

docker ps -> permet d'afficher les containers qui tournent
docker logs <container_name> -> ici le nom est suspicious_fermi, permet de voir infos sur server apache
telnet 192.168.42.42 9090 -> pour se connecter (sur server apache) et envoyer requete http
docker inspect <container_name> -> on obtient info container et surtout adresse ip du container
docker exec -it <container_name> /bin/bash -> se connecter sur un container en execution + ici on démarre un terminal.
ATTENTION: ici on travaille dans le file system du container, pratique pour tester. Mais si on stop/supprime le container, on perd tout!!! Donc faire des copies
echo "Coucou" > index.html -> quand on arrive dans un dossier, apache recherche ce fichier par défaut.
echo "<h>Coucou</h>" > index.html -> pour ajouter balise html
echo "<h>Coucou A</h>" > a.html -> pour se connecter sur ce fichier dans navigateur avec 192.168.42.42:9090/a.html
cd /etc/apache2/ -> configuration du service apache.
puis cd sites-available pour les fichiers config apache et faire more 000-default

dans Dockerfile on remplace src/ par content/ pour copier le contenu de content.

docker build -t res/apache_php . -> le '.' pour dire on utilise répertoire courant pour la création de l'image
docker kill <container_name> -> pour tuer un container.
history -> permet d'afficher toutes les ancienne commande ;)

chercher bootstrap et copier le contenu dans le dossier content. Rebuilder.
open index.html -> ouvrir la page en local.

git add docker-images/
git commit -m "Docker image 'static HTML with apache+php' working and validated"
git push origin fb-apache-static